# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of the Galaxy MIRA tools.
#
# For technical details, see http://travis-ci.org/ and this blog post
# for background,
# http://blastedbio.blogspot.com/2013/09/using-travis-ci-for-testing-galaxy-tools.html

# Galaxy currently only supports Python 2.6
language: python
matrix:
  include:
    - python: "2.7"
      env: GALAXY_BRANCH=master
    - python: "2.7"
      env: GALAXY_BRANCH=dev

# We don't need sudo so can avoid slower legacy TravisCI infrastructure
sudo: false

# Planemo Lint
# ============
#
# Planemo can be run to check tools separately from Galaxy, and this
# is fast so we do it *before* the slow process of installing Galaxy
# and running the tool tests.
#
#
# Installing Galaxy
# =================
#
# We define extra datatypes, and therefore install a Galaxy instance
# and add the datatypes to it.
#
#
# Installing Tool Dependencies
# ============================
#
# We also need to install our tool dependencies, e.g. MIRA binaries
# which we will do via "planemo dependency_script" rather than via a
# (local) Galaxy Tool Shed. Note we need to install the different
# versions of MIRA into separate directories as the binary filenames
# clash otherwise. Although the tool_dependencies.xml files do define
# unique environment variables $MIRA3, $MIRA4 and $MIRA4_9 at the moment
# the MIRA 3.4 wrapper only looks at $PATH and therefore this must be
# installed last.

before_install:
 - echo "Using planemo lint to check for obvious tool errors"
 - pip install --upgrade pip setuptools
 - pip install planemo
 - planemo --version
 - planemo shed_lint --tools --fail_level error --ensure_metadata --urls -r ${TRAVIS_BUILD_DIR}
 - echo "Fixing permissions on Python eggs cache folder"
 - mkdir -p "$HOME/.python-eggs"
 - chmod 700 "$HOME/.python-eggs"
 - export DOWNLOAD_CACHE=/tmp/download_cache && mkdir $DOWNLOAD_CACHE
 - echo "Downloading and setting up MIRA 4.0..."
 - export INSTALL_DIR=/tmp/dep_install_mira_4_0 && mkdir $INSTALL_DIR
 - planemo dependency_script ${TRAVIS_BUILD_DIR}/packages/package_mira_4_0_2
 - bash dep_install.sh
 - source env.sh
 - echo "Downloading and setting up MIRA 4.9..."
 - export INSTALL_DIR=/tmp/dep_install_mira_4_9 && mkdir $INSTALL_DIR
 - planemo dependency_script ${TRAVIS_BUILD_DIR}/packages/package_mira_4_9_5
 - bash dep_install.sh
 - source env.sh
 - echo "Downloading and setting up MIRA 3.4..."
 - export INSTALL_DIR=/tmp/dep_install_mira_3_4 && mkdir $INSTALL_DIR
 - planemo dependency_script ${TRAVIS_BUILD_DIR}/packages/package_mira_3_4_1_1
 - bash dep_install.sh
 - source env.sh
 - echo "Installing samtools..."
 - cd ${TRAVIS_BUILD_DIR} && mkdir samtools && cd samtools
 - wget http://depot.galaxyproject.org/package/linux/x86_64/samtools/samtools-0.1.19-Linux-x86_64.tgz
 - tar -zxvf samtools-0.1.19-Linux-x86_64.tgz
 - export PATH=$PWD/bin/:$PATH
 - echo "Fetching Galaxy ${GALAXY_BRANCH} branch..."
 - cd ${TRAVIS_BUILD_DIR}
 - wget https://codeload.github.com/galaxyproject/galaxy/tar.gz/${GALAXY_BRANCH}
 - tar -zxvf ${GALAXY_BRANCH} | tail
 - cd galaxy-${GALAXY_BRANCH}
 - pip install requests 

# Configuring tools within Galaxy
# ===============================
#
# We setup our datatypes by adding mira.py to the Galaxy library folder,
# and replacing the datatypes_conf.xml file.

install:
 - cd ${TRAVIS_BUILD_DIR}/galaxy-${GALAXY_BRANCH}
 - export GALAXY_TEST_UPLOAD_ASYNC=false
 - export GALAXY_TEST_DB_TEMPLATE=https://github.com/jmchilton/galaxy-downloads/raw/master/db_gx_rev_0127.sqlite
 - ln -s ${TRAVIS_BUILD_DIR}/datatypes/mira_datatypes/mira.py lib/galaxy/datatypes/mira.py
 - ln -s ${TRAVIS_BUILD_DIR}/.travis.datatypes_conf.xml datatypes_conf.xml
 - bash scripts/common_startup.sh --no-create-venv --dev-wheels

# Testing tools in Galaxy
# =======================
#
# Having setup our Galaxy with our datatypes, call planemo test

script:
 - cd ${TRAVIS_BUILD_DIR}
 - planemo test --galaxy_root ${TRAVIS_BUILD_DIR}/galaxy-${GALAXY_BRANCH} --skip_venv tools/

notifications:
  email: false
